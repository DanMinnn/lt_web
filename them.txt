public ActionResult ThemMoi()
        {
            return View();
        }

        [HttpPost]
        public ActionResult ThemMoi(CoSo model, HttpPostedFileBase fileAnh)
        {
            if (fileAnh.ContentLength > 0)
            {
                string rootFolder = Server.MapPath("/Content/img/");
                string pathImage = rootFolder + fileAnh.FileName;
                fileAnh.SaveAs(pathImage);
                model.HinhAnh = fileAnh.FileName;
            }

            if (string.IsNullOrEmpty(model.MaCS) == true || string.IsNullOrEmpty(model.TenCS) == true ||
                string.IsNullOrEmpty(model.HinhAnh) == true || string.IsNullOrEmpty(model.LinkMap) == true ||
                    string.IsNullOrEmpty(model.MucGia) == true || string.IsNullOrEmpty(model.DiaChi) == true)
            {
                ModelState.AddModelError("", "Thiếu thông tin");
                return View(model);
            }

           
            try
            {
                db.CoSoes.Add(model);
                db.SaveChanges();
                return RedirectToAction("DanhSachCoSo");
            }
            catch(Exception ex)
            {
                ModelState.AddModelError("", ex.Message);
                return View(model);
            }
        }

----------------------------------------------------------------------------------------------------
View


@model TestTemplate.Models.CoSo

@{
    ViewBag.Title = "Thêm cơ sở";
    Layout = "~/Areas/Admin/Views/Shared/LayoutAdmin.cshtml";
    TestTemplate.Models.QLDSEntities db = new TestTemplate.Models.QLDSEntities();
}

<h2>Thêm</h2>

@using (Html.BeginForm("ThemMoi","CoSo", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        <label class="control-label col-md-10 " style="margin-top: 10px">Mã cơ sở</label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.MaCS, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.MaCS, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-10 " style="margin-top: 10px">Tên cơ sở</label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.TenCS, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TenCS, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-10 " style="margin-top: 10px">Hình ảnh</label>
        <div class="col-md-10">
            <input type="file" name="FileAnh" />
            @Html.ValidationMessageFor(model => model.HinhAnh, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-10 " style="margin-top: 10px">Địa chỉ</label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.DiaChi, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DiaChi, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-10 " style="margin-top: 10px">Link google maps</label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.LinkMap, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LinkMap, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-10 " style="margin-top: 10px">Mức giá</label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.MucGia, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.MucGia, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-10 " style="margin-top: 10px">Tên loại sân</label>
        <div class="col-md-10">
            <select name="MaLs" class="form-control">
                @foreach(var loai in db.LoaiCoSoes.ToList())
                {
                    <option value="@loai.MaLoaiCS">@loai.TenLoaiCS</option>
                }
                @*<option value="BongDa">f</option>
                <option value="BongRo">br</option>
                <option value="CauLong">bmt</option>
                <option value="Tennis">tennis   </option>*@
            </select>
            @Html.ValidationMessageFor(model => model.MaLoaiCS, "", new { @class = "text-danger" })
        </div>
    </div>



    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Thêm" class="btn btn-primary" />
        </div>
    </div>
</div>
}

