@model De_02.Models.SanPham

@{
    ViewBag.Title = "Update";
    Layout = "~/Views/Shared/_Layout.cshtml";
    De_02.Models.QLBanQuanAoEntities db = new De_02.Models.QLBanQuanAoEntities();
}

@using (Html.BeginForm("Update", "BaiThi", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.HiddenFor(m => m.MaSanPham)
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.MaSanPham)

        <div class="form-group">
            <label class="control-label col-md-10 " style="margin-top: 10px">Tên sản phẩm</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.TenSanPham, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TenSanPham, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-10 " style="margin-top: 10px">Mã phân loại</label>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.SelectedMaPLC,
                new SelectList(db.PhanLoais.ToList(), "MaPhanLoai", "PhanLoaiChinh", Model.SelectedMaPLC),
                new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-10 " style="margin-top: 10px">Giá nhập</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.GiaNhap, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GiaNhap, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-10 " style="margin-top: 10px">Đơn giá bán nhỏ nhất</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.DonGiaBanNhoNhat, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DonGiaBanNhoNhat, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-10 " style="margin-top: 10px">Đơn giá bán lớn nhất</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.DonGiaBanLonNhat, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DonGiaBanLonNhat, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-10 " style="margin-top: 10px">Trạng thái</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.TrangThai, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TrangThai, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-10 " style="margin-top: 10px">Mã phân loại phụ</label>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.SelectedMaPLP,
                new SelectList(db.PhanLoaiPhus.ToList(), "MaPhanLoaiPhu", "TenPhanLoaiPhu", Model.SelectedMaPLP),
                new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-10 " style="margin-top: 10px">Mô tả ngắn</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.MoTaNgan, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MoTaNgan, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-10 " style="margin-top: 10px">Ảnh đại diện</label>
            <div class="col-md-10">
                <input type="file" id="fileInput" accept=".jpg" />
                <button type="button" onclick="validateFile()">Submit</button>
                @Html.ValidationMessageFor(model => model.AnhDaiDien, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-10 " style="margin-top: 10px">Nổi bật</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.NoiBat, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NoiBat, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Cập nhật" class="btn btn-default" />
                @Html.ActionLink("Xóa", "Xoa", new { id = Model.MaSanPham }, new { @class = "btn btn-default" })
            </div>
        </div>
    </div>
}

<script>
    function validateFile() {
        var fileInput = document.getElementById('fileInput');
        var fileName = fileInput.value;

        if (fileName.length > 0) {
            // Kiểm tra đuôi file
            var extension = fileName.split('.').pop().toLowerCase();
            if (extension !== 'jpg') {
                alert('Chỉ chấp nhận file ảnh có đuôi .jpg');
                // Reset giá trị của input file
                fileInput.value = '';
                return;
            }

            // Nếu muốn kiểm tra kích thước file, bạn có thể sử dụng:
            // var fileSize = fileInput.files[0].size; // Kích thước file trong bytes
            // if (fileSize > 1024 * 1024) { // Kiểm tra kích thước lớn hơn 1MB
            //     alert('File quá lớn. Vui lòng chọn file nhỏ hơn.');
            //     fileInput.value = '';
            //     return;
            // }
        }

        // Nếu các điều kiện kiểm tra đều hợp lệ, bạn có thể gửi form hoặc thực hiện các hành động khác.
        document.getElementById('myForm').submit();
    }
</script>


